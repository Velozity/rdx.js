// @generated by rootSdk Generator
// DO NOT HAND EDIT
// tslint: disable

import {
  EchoEvent,
	EchoRequest,
	EchoResponse,
	Void
} from "@rdx.js-example/gen-shared"
import {
  BroadcastClientMerged,
	Client,
	DeviceContext,
	RootServer,
	RootServerService,
	UntypedServerMethodDefinition,
	rootServer
} from "@rootsdk/server-app"

export abstract class EchoServiceBase implements RootServerService {
	abstract echo(request: EchoRequest, client: Client): Promise<EchoResponse>;
	public broadcastMessage(message: EchoEvent, clients: BroadcastClientMerged, except?: DeviceContext) {
		(<any>rootServer).sendBroadcast('/.EchoService/BroadcastMessage', message, clients, except);
	}

	private __register(): UntypedServerMethodDefinition[] {
		return [	{
			serviceName: 'EchoService',
			methodName: 'Echo',
			funct: (e: EchoRequest, c: Client) => { return this.echo(e, c) },
			path: '/.EchoService/Echo',
			requestDeserialize: bytes => EchoRequest.fromBinary(bytes),
			responseSerialize: value => EchoResponse.toBinary(value)
		},
		{
			serviceName: "EchoService",
			methodName: "BroadcastMessage",
      path: '/.EchoService/BroadcastMessage',
      requestSerialize: value => EchoEvent.toBinary(value)
    },
	]}

	public get ServerServiceName(): string {
		return "EchoService";
	}

}
